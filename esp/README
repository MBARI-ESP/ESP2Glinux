Notes on how to configure the TS-7200 from Technologics as an ESP controller'
 -- revised:  11/7/05 brent@mbari.org

A) Build the Flash Filesystem if its not up to date

$ cd ~/linux/esp
$ arminstall  #this builds the filesystem tree rooted at ~/armHost


B) Add Ruby and its supporting libs to the base tree

$ cd ~/ESP/gen2/software
$ cd termcap
$ arminstall
$ cd ../readline
$ armconfig && arminstall
$ cd ../ruby
$ armconfig && arminstall


C) Build the kernel

Build the kernel source if necessary
$ cd ~/linux/technologic
$ armconfig  #see comments in armconfig for downloading the latest
$ cd linux24
$ make dep clean bzImage modules modules_install


D) Create the JFFS2 filesystem image

$ cd ../../esp
$ buildjffs2 > armHost.jffs2


E) Configure Redboot

Bring up minicom
Reset the board and press Control-C to enter redboot
redboot> fconfig  #to configure
follow example redboot.cfg
[Bufflehead is assumed to be the development server]
define aliases
alias name "string"  #remember to \escape all \" in strings

cut and paste the following into redboot> one line at a time:

alias exec "exec -c \"console=ttyAM1,115200 root=/dev/mtdblock1\""
n
alias boot "fis load vmlinux; %{exec}"
n
alias bootHda1 "fis load vmlinux; %{execHda1}"
n
alias execHda1 "exec -c \"console=ttyAM1,115200 root=/dev/hda1\""
n
alias bootHda2 "fis load vmlinux; %{execHda2}"
n
alias execHda2 "exec -c \"console=ttyAM1,115200 root=/dev/hda2\""
n
alias getKernel "load -r -b 0x218000"
y


E) Install JP 4 to use COM2 as the console port
   (move the serial connection to COM2)
   reset the board and press Control-C to enter redboot
   

G) Replace the kernel with the one last build on Bufflehead

RedBoot>  %{getKernel} zImage  #assumes zImage installed at root of tftp server
RedBoot>  fis delete vmlinux
RedBoot>  fis create vmlinux


H) Install the staging Compact Flash and boot the board

power off board, install CF card, power on
control-C to enter redboot
RedBoot> %{bootHda2}


I) Replace the jffs2 image with the one just built

on ESPstage as root:
# flash_eraseall /dev/mtd/1

on bufflehead:
$ cat armHost.jffs2 | ssh root@ESPstage dd of=/dev/mtd/1 bs=128k


J) reboot and let the board start normally

  login as root, RNAprobe


K) Change the /etc/HOSTNAME and corresponding entry for /var/log in /etc/fstab
    reboot
    

L) generate .ssh keys for users

  for each user, login
  mkdir .ssh; cd .ssh
  dropbearkey -t rsa -f id_rsa > id_rsa.pub
  scp user@bufflehead:.ssh/id_rsa.pub authorized_keys  #to add the first
  

M)  What did I forget?!
  Oh, copy the esp application to the esp user's esp2local directory
  
