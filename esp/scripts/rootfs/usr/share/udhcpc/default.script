#!/bin/sh
# udhcpc script edited by Tim Riker <Tim@Rikers.org>
# revised:  9/1/09 by brent@mbari.org

[ -z "$1" -o -z "$interface" ] && 
  echo "Error: should be called from udhcpc" && exit 1

. /usr/share/netutils.sh
configfn=/etc/sysconfig/ifcfg-$interface
[ -r $configfn ] && . $configfn

tracefn=/tmp/udhcpc.trace
if [ -w $tracefn ]; then
  (date; echo "$@"; env) >>$tracefn
  exec 2>>$tracefn
  set -x
fi

leased=/var/run/$interface.lease

case "$1" in
  deconfig|leasefail)
    if [ -f $leased ]; then
      . /etc/sysconfig/ifcfg-$interface
      [ "$NETMASK" ] && mask="netmask $NETMASK"
      [ "$BROADCAST" ] && cast="broadcast $BROADCAST"
      echo -n "$interface DHCP failed: "
      ifconfig $interface down  #purge old routes
      [ "$IPADDR" ] && ifconfig $interface $IPADDR $mask $cast && {
        echo "IP=$IPADDR $mask $cast"
        [ "$NETWORK" ] && route add -net $NETWORK $mask dev $interface
        [ "$GATEWAY" ] && route -n | grep -q '^0\.0\.0\.0' && 
          route add default gateway $GATEWAY dev $interface
      }
      gateUp $interface $GATEWAY
      hostsUp $interface
      rm -f $leased
    else
      ifconfig $interface up  #so dhcp can use it
    fi
  ;;

  renew|bound)
    newLeaseSpec="$ip M:$subnet B:$broadcast G:$router"
    newDNSspec="$domain DNS:$dns"
    [ -f $leased ] && { read leaseSpec && read DNSspec; } < $leased
    [ "$newDNSspec" != "$DNSspec" -o "$newLeaseSpec" != "$leaseSpec" ] && {
      [ "$broadcast" ] && BROADCAST="broadcast $broadcast"
      [ "$subnet" ] && NETMASK="netmask $subnet"
      ifconfig $interface $ip $BROADCAST $NETMASK || return 99

      echo "DHCP $1 $interface to $ip $NETMASK $BROADCAST"
      [ "$dns" ] && echo "     dns $dns"
      resolv_conf() {
        echo "search `searchDomains $domain`"
        for ip in $dns ; do
          echo "nameserver $ip"
        done
      }
      gateUp $interface $router
      hostsUp $interface

      echo -e "$newLeaseSpec\n$newDNSspec" >$leased
    }    
esac
