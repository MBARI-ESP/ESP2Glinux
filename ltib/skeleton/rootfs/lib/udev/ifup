#!/bin/sh
#first argument the name of a newly detected network interface
#optional 2nd argument is start up (sleep) delay
#when /var/lock/if.pending exists, actions are deferred
#otherwise, this brings interface UP if it was down
exec 7<&- 5<&- >>/dev/console 2>&1

export PATH=/usr/sbin:/sbin:/usr/bin:/bin
lockFn=/var/lock/ifup.pending  #must be empty before udevd starts
[ -r $lockFn ] && {
  exec 7<$lockFn  #acquire lock
  flock -x 7 && [ -e $lockFn ] && { #got lock, so defer ifup
    [ "$2" ] || exec echo -n "$1 " >>$lockFn  #no start delay
    IFS=. read now idle </proc/uptime  #uptime in secs
    let "start=now+$2"  #interface's deferred start time
    exec echo -n "$start $1 " >>$lockFn
  }
  exec 7<&-       #release lock.  Did not need to defer ifup.  ifup now!
}
. /usr/share/netutils.sh
ifCfg $1
ifUpAuto $2 &

#catchup command starts interfaces listed in ifup.pending
