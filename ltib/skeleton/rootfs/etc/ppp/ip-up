#!/bin/sh
# executed after connecting the ppp interface.

PPP_IFACE="$1"
PPP_TTY="$2"
PPP_SPEED="$3"
PPP_LOCAL="$4"
PPP_REMOTE="$5"
PPP_IPPARAM="$6"
export PPP_IFACE PPP_TTY PPP_SPEED PPP_LOCAL PPP_REMOTE PPP_IPPARAM

. /usr/share/netutils.sh
configfn=/etc/sysconfig/ifcfg-$PPP_IFACE
[ -r $configfn ] && . $configfn

tracefn=/tmp/ip-up.trace
if [ -w $tracefn ]; then
  (date; echo "$@"; env) >>$tracefn
  exec 2>>$tracefn
  set -x
fi

unset domain gateway
[ "$DEFAULTROUTE" ] && gateway=" $IPREMOTE"

#if PEERNAME is prefixed with a dot, change our own hostname to it
if [ -n "$PEERNAME" ]; then
  IFS=.
  set $PEERNAME
  IFS=
  if [ -z "$1" -a -n "$2" ]; then  #there was a leading dot!
    host=$2
#    [ -f $oldHostname ] || hostname >$oldHostname
    if [ $# -gt 2 ]; then
      domain=$3
      shift 3
      for component; do
        domain=$domain.$component
      done
    fi
#      hostname $host  #disable changing hostname
  fi
fi

[ "$USEPEERDNS" ] && {
  resolv_conf() {
    echo "search `searchDomains $domain`"
    for ip in $DNS1 $DNS2 ; do
      echo "nameserver $ip"
    done
  }
}

gateUp $PPP_IFACE $gateway
hostsUp $PPP_IFACE

#if ipparam specs "/vpn" iface, bring that iface up, unless there is already
#a host route to the vpn server via a different interface.
#Always bring down vpn if its carrier was (an old instance of) this ppp link.
server=`dirname $PPP_IPPARAM` && [ "$server" != . ] &&
  if vpn=`basename $PPP_IPPARAM`; then #check for being carried by another iface
    carrier=`hostIface $server` && [ "$carrier" != "$PPP_IFACE" ] && exit 0
    [ -e "/var/run/$vpn.pid" ] && ifdown $vpn
    exec ifup $vpn
  fi
