#!/bin/sh
# udhcpc script edited by Tim Riker <Tim@Rikers.org>
# revised:  3/7/25 by brent@mbari.org

[ "$1" -a "$interface" ] || {
  echo "Error: should be called from udhcpc"
  exit 1
}
. /usr/share/netutils.sh
ifCfg $interface && {
  export VPN
  validIFconfig=1
}

leased=$run/$interface.lease

log() {
    logger -t "udhcpc[$PPID]" -p daemon.$1 "$interface: $2"
}

case "$1" in
  deconfig)
    rm -f $run/resolv/$interface
    if [ "$validIFconfig" ] && ipUp; then
      [ -f $leased -a "$IPADDR" ] && log notice "reverted to $IPADDR"
    else
      ifconfig $interface 0
    fi
    rm -f $leased
  ;;
  bound|renew)
    leaseSpec="$ip M:$subnet B:$broadcast G:$router U:$mtu"
    if [ "$ignoreDNS" ]; then
      unset dns
    else
      LN=$'\n'
      leaseSpec="$leaseSpec$LN$domain DNS:$dns"
    fi
    #don't disturb running interface if lease renewed with no changes
    [ "$1" = "renew" -a "`cat $leased 2>/dev/null`" = "$leaseSpec" ] && exit
    [ "$dns" ] && {
      resolv_conf() {
        echo "search `searchDomains $domain`"
        for dnsip in $dns ; do
          echo "nameserver $dnsip"
        done
      }
      dnsMsg=" with DNS $dns"
    }
IPADDR=$ip NETMASK=$subnet BROADCAST=$broadcast GATEWAY=$router MTU=$mtu ipUp&&{
      log info "DHCP $1 ${IFALIAS-$interface} to $ip$dnsMsg"
      echo "$leaseSpec" >$leased
    }
  ;;
  leasefail | nak)
    log err "configuration failed: $1: $message"
	;;
  *)
    log err "Unknown udhcpc command: $1"
    exit 1
esac
