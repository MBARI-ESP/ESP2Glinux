#!/bin/sh
self=`basename $0`
: ${HOME:=/root} #in case invoked from inittab
: ${noGateDelay:=600}  #retry delay if no gateway
: ${pidFn:=/var/run/$self.pid}
: ${portFn:=/var/etc/$self.port}  #stores last TCP port # assigned us
#portFn=/dev/null   #uncomment to query for our remote port # on each connect
: ${traceFn=/tmp/$self.trace}
: ${shore:=ESPshore}
: ${shoreUser:=`hostname`}
: ${shoreSSH:="-p2323 $shoreUser@$shore"}
[ "$1" ] && { cat >&2 <<END
Bring up ssh tunnel to $shore for ssh and smtp -- 11/10/19 brent@mbari.org
Retries every $noGateDelay seconds until internet is available
END
  exit 2
}
tunHosts=/var/run/$self.hosts
export HOME
[ -w $traceFn ] && {
  exec 2>>$traceFn
  date >&2
  env >&2
  set -x
}

trap "rm -f $tunHosts $pidFn" EXIT
trap "pkill -P $$; exit 1" TERM HUP INT QUIT
trap "" USR1 USR2

if [ -s "$pidFn" ];then
  #kill any other instances
  oldPID=`cat $pidFn 2>/dev/null` &&
    kill -0 "$oldPID" 2>/dev/null && kill -HUP $oldPID
  fuser -sk 25/tcp
  echo $$ >$pidFn
elif [ -e "$pidFn" ]; then  #empty .pid file
  echo $$ >$pidFn
  echo "Delaying reopening tunnel for $noGateDelay seconds"
  sleep $noGateDelay
else  #missing .pid file
  echo $$ >$pidFn
fi

topIf() {
  #output the name of the top priority network interface
  local iface
  read -r iface gateway 2>/dev/null </etc/resolv.conf &&
  echo ${iface###}
}

while [ ! `topIf` ]; do
  echo "No Network Gateway -- reopening tunnel in $noGateDelay seconds"
  sleep $noGateDelay
done

#ensure shore and mail resolve to localhost
echo '127.0.0.1 shore mail' >$tunHosts
cat $tunHosts >>/etc/hosts

tunnels="-L25:$shore:25 -L873:$shore:873"
tunArgs="-oExitOnForwardFailure=yes -ygNK 180 $shoreSSH"
local=localhost:22

#delay until tunnel is closed.  Empty .pid file on exit to delay its reopening.
trap "trap '' USR1 EXIT; pkill -P $$; wait; >$pidFn; exit 1" USR1

#first, try the port previously assigned us
[ -s $portFn ] && ssh -R`cat $portFn`:$local $tunnels $tunArgs || {
  sshPort=`ssh -y $shoreSSH tunnel close` && {  #request far side close tunnel
    echo $sshPort >$portFn     #remember the port assigned us
    ssh -R$sshPort:$local $tunnels $tunArgs
  }
}
