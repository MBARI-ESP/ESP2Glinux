#!/bin/sh
prog=`basename $0`

. /usr/share/netutils.sh

if [ "$1" ]; then
  hasIP "$1" || { cat >&2 <<END
Select next available ESPshore route -- 10/7/25 brent@mbari.org
Assumes gateway.priority DOES NOT contain wildcards!
Does not cycle power to interfaces
Intended to be invoked from wgatch or directly with next iface specified
Usage:
  $prog {iface to ESPshore}
END
  exit 2
  }
  nextIface=$1
else
  gates=$syscfg/gateway.priority

  nextGate() {
  #given name of current gateway interface,
  #output name of next gateway interface, or first if last gateway active
    local ifaces oldPWD=$PWD found first next this
    unset found first this next
    read -r ifaces <$gates || return 6
    cd $run/resolv
    for this in $ifaces; do
      [ "$first" ] || first=$this
      [ "$found" ] && {
        next=$this
        break
      }
      [ "$this" = "$1" ] && found=1
    done
    [ "$found" -a "$next" ] || next=$first
    cd $oldPWD
    echo $next
  }

  stickup=/lib/udev/stickup
  failedIface=`routeTo $ESPshore 2>/dev/null`
  firstNext=`nextGate $failedIface`
  [ "$firstNext" ] || {
    logger -t $prog "No gateway interfaces defined in $gates"
    exit 8
  }
  nextIface=$firstNext
  while :; do #try ifaces in order until one works or firstNext reached again
    [ "$failedIface" ] && {
      failedAT="/dev/AT/$failedIface"
      [ -c "$failedAT" -a -w "$failedAT" ] && {
        signal=`signalQuality $failedAT` &&
          signal=" with ${signal#chat:*+}"
        logger -t $prog "Shutting down failing $failedIface$signal"
        ifdown $failedIface
      }
      unset failedIface
    }
    ifup $nextIface && hasIP $nextIface && break
    failedIface=$nextIface
    nextIface=`nextGate $nextIface`
    [ "$nextIface" = "$firstNext" ] && {
      logger -t $prog "No internet access!  Resetting USB!"
      resetUSB
      exit 3
    }
  done
  shoreIface=`routeTo $ESPshore 2>/dev/null`
  [ "$shoreIface" = "$nextIface" ] && {
    logger -t $prog "Already routing to ESPshore via $nextIface"
    exit 0
  }
fi

nextIP=`gateIPadr $nextIface` &&
ip route replace $ESPshore via $nextIP dev $nextIface || exit
logger -t $prog "Added $nextIface route to ESPshore"
:
