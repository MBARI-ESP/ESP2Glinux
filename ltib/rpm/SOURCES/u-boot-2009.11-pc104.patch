diff --exclude CVS --exclude .git -uNr u-boot-2009.11/Makefile u-boot-2009.11.modified/Makefile
--- u-boot-2009.11/Makefile	2015-03-25 14:46:13.743874595 -0700
+++ u-boot-2009.11.modified/Makefile	2015-02-18 14:23:47.607627532 -0800
@@ -24,7 +24,7 @@
 VERSION = 2009
 PATCHLEVEL = 11
 SUBLEVEL =
-EXTRAVERSION = -mbari6
+EXTRAVERSION = -mbari7
 ifneq "$(SUBLEVEL)" ""
 U_BOOT_VERSION = $(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION)
 else
diff --exclude CVS --exclude .git -uNr u-boot-2009.11/board/ea31xx/ea31xx.c u-boot-2009.11.modified/board/ea31xx/ea31xx.c
--- u-boot-2009.11/board/ea31xx/ea31xx.c	2015-03-25 14:46:13.743874595 -0700
+++ u-boot-2009.11.modified/board/ea31xx/ea31xx.c	2015-03-10 14:03:09.297281837 -0700
@@ -1,5 +1,5 @@
 /*
-* revised:  11/21/14 brent@mbari.org for ESP3G host boards
+* revised:  3/10/15 brent@mbari.org for ESP3G host boards
 *
 * (C) Copyright 2007-2008
 * Stelian Pop <stelian.pop@leadtechdesign.com>
@@ -47,6 +47,18 @@
 #define PCA9532_USB_VBUS_PWR_REG	0x07
 #define PCA9532_USB_VBUS_PWR_VAL	0x10
 
+#define REG16(x)	(*((volatile u16 *)(x)))
+
+/*  PC/104 carrier board constants */
+#define PC104FPGA   REG16(EXT_SRAM0_1_BASE+0x8000)  //PC104 FPGA control
+enum {
+  PC104IRQID     = _BIT(0),  //0 selects board id, 1 selects PC/104 IRQs
+  PC104ENETRESET = _BIT(1),  //1 resets on board (micrel) ethernet chip
+  PC104RESET     = _BIT(2),  //1 resets PC/104 bus
+  PC104force16   = _BIT(3),  //force sixteen bit access on PC/104 bus
+  PC104force8    = _BIT(4)   //force eight bit access on PC/104 bus
+};
+
 
 /***********************************************************************
  * GPIO register definitions
@@ -80,7 +92,6 @@
 #define IOCONF_UART          (0x300)
 
 
-
 DECLARE_GLOBAL_DATA_PTR;
 
 const SPI_SLAVE_CONFIG_T slavecfg =
@@ -112,12 +123,6 @@
   return boardID = GPIO_STATE(IOCONF_GPIO)>>5;
 }
 
-static inline int mbariBoard(uint8_t id)
-// return 1 for mbariBoard, 0 for non-mbari (Embedded Artists?) origin board
-{
-  return id == 0 || id == 0104;
-}
-
 static inline void assertPeripheralReset(void)
 {
   GPIO_OUT_LOW(IOCONF_I2SRX_0, 1);  //I2SRX_BCK0
@@ -152,40 +157,68 @@
 }
 
 
-static void pc104g3init(const char *signon)
+static void setTiming(u32 timing)
 /*
-  initialization common to ESP3G and PC104 carrier
-*/
-{
-  assertPeripheralReset();
-  udelay(10*1000);
-  releasePeripheralReset();
-  printf(signon);
+ * Configure Chip-Select 2 for the KS8851 w/16-bit parallel bus interface.
+ *  and the FPGA control register in case of the PC/104 bus carrier board.
+ * Note: These timings were calculated for MASTER_CLOCK = 90000000
+ *  according to the KS8851_MLL timings.
+ * 57ns strobes for 3G board
+ *  timing spec'd in pairs of octal digits from MSB to LSB:
+ *     WTTURN WTOEN WTRD WTWEN WTWR
+ */
+{
+  MPMC_STCONFIG1 = 0x81;  /* 16-bit transfers */
+  MPMC_STWTWR1 = timing & 037;  //4 for 3G board
+  MPMC_STWTWEN1 = (timing >>= 6) & 037;
+  /* enable oe toggle between consec reads */
+  SYS_MPMC_WTD_DEL1 = _BIT(5) | (MPMC_STWTRD1 = (timing>>=6)&037);  //5 for 3G
+  MPMC_STWTOEN1 = (timing >>= 6) & 017;
+  MPMC_STWTTURN1 = timing >>= 6;   //2 for 3G
+}
+
+struct timing {
+  u8 stconfig, stwtoen, stwtrd, wtddel, stwtwen, stwtwr, stwturn;
+};
+
+static void saveTiming(struct timing *current)
+/*
+ *  return the existing timing parameters for Chip-Select 2.
+ *  This struct can be later passed to restoreTiming()
+ */
+{
+  current->stconfig = MPMC_STCONFIG1;
+  current->stwtoen = MPMC_STWTOEN1;
+  current->stwtrd = MPMC_STWTRD1;
+  current->wtddel = SYS_MPMC_WTD_DEL1;
+  current->stwtwen = MPMC_STWTWEN1;
+  current->stwtwr = MPMC_STWTWR1;
+  current->stwturn = MPMC_STWTTURN1;
+}
+
+static void restoreTiming(struct timing *old)
+/*
+ *  restore the old timing for Chip-Select 2
+ *  This struct was generated by saveTiming()
+ */
+{
+  MPMC_STCONFIG1 = old->stconfig;
+  MPMC_STWTOEN1 = old->stwtoen;
+  MPMC_STWTRD1 = old->stwtrd;
+  SYS_MPMC_WTD_DEL1 = old->wtddel;
+  MPMC_STWTWEN1 = old->stwtwen;
+  MPMC_STWTWR1 = old->stwtwr;
+  MPMC_STWTTURN1 = old->stwturn;
 }
 
 
 int board_eth_init(bd_t *bis)
 {
 #ifdef CONFIG_KS8851_MLL
-  int stretch = 0;
   switch (boardID) {
-    case 0104:
-      stretch++;  //longer strobes needed for FPGA on PC/104 board
     case 0: {
       int ms = 1000;
-      /*
-       * Configure Chip-Select 2 for the KS8851 w/16-bit parallel bus interface.
-       * Note: These timings were calculated for MASTER_CLOCK = 90000000
-       *  according to the KS8851_MLL timings.
-       * 57ns strobes for 3G board, 68ns strobes for PC/104 carrier.
-       */
-      MPMC_STCONFIG1 = 0x81;  /* 16-bit transfers */
-      MPMC_STWTOEN1 = 0;
-      /* enable oe toggle between consec reads */
-      SYS_MPMC_WTD_DEL1 = _BIT(5) | (MPMC_STWTRD1 = 5+stretch);
-      MPMC_STWTWEN1 = 0;
-      MPMC_STWTWR1 = 4+stretch;
-
+      setTiming(0200050004);  //octal
       while (peripheralResetAsserted()) { //wait up to 1 sec for reset release
         if (!--ms) {
           printf("[Reset stuck!]\n");
@@ -194,8 +227,9 @@
         udelay(1000);
       }
       udelay(10*1000);
+    } //fall thru
+    case 0104:  //timing will have been already set if this is a pc104 carrier
       return ks8851_mll_initialize(0, EXT_SRAM0_1_BASE);
-    }
   }
 #endif
 #ifdef CONFIG_DRIVER_DM9000
@@ -222,21 +256,21 @@
   if((env_enetaddr[0] | env_enetaddr[1] | env_enetaddr[2] |
           env_enetaddr[3] | env_enetaddr[4] | env_enetaddr[5]) == 0x0) {
 
-                  /* Enable clock for Random Number Generator Module */
-                  cgu_clk_en_dis(CGU_SB_RNG_PCLK_ID, 1);
-                  rnd_num = *((volatile u32 *)(CIC_RNG_BASE));
-
-                  env_enetaddr[0] = 0x00;
-                  env_enetaddr[1] = 0x08;
-                  for (i = 2; i < 6; i++) {
-                          env_enetaddr[i] = ((rnd_num >> ((i - 2) * 8)) & 0xFF);
-                  }
-
-                  sprintf(buf,"%02x:%02x:%02x:%02x:%02x:%02x",
-                          env_enetaddr[0], env_enetaddr[1],
-                          env_enetaddr[2], env_enetaddr[3],
-                          env_enetaddr[4], env_enetaddr[5]);
-                  setenv(enetvar, buf);
+    /* Enable clock for Random Number Generator Module */
+    cgu_clk_en_dis(CGU_SB_RNG_PCLK_ID, 1);
+    rnd_num = *((volatile u32 *)(CIC_RNG_BASE));
+
+    env_enetaddr[0] = 0x00;
+    env_enetaddr[1] = 0x08;
+    for (i = 2; i < 6; i++) {
+            env_enetaddr[i] = ((rnd_num >> ((i - 2) * 8)) & 0xFF);
+    }
+
+    sprintf(buf,"%02x:%02x:%02x:%02x:%02x:%02x",
+            env_enetaddr[0], env_enetaddr[1],
+            env_enetaddr[2], env_enetaddr[3],
+            env_enetaddr[4], env_enetaddr[5]);
+    setenv(enetvar, buf);
   }
   return 0;
 }
@@ -244,20 +278,34 @@
 
 int board_init(void)
 {
-    mciPowerOff();
-         /* add other devices depending on carrier board type */
-    switch (getBoardId()) {
-      case 0:  /* ESP 3G baseboard */
-        pc104g3init("LPC31xx for MBARI ESP 3G\n");
-        break;
-
-      case 0104:  /* (octal 0104) PC/104 carrier */
-        pc104g3init("LPC31xx on MBARI PC/104 Carrier\n");
-        break;
+  struct timing bootTiming;
+  saveTiming(&bootTiming);
+  setTiming(0200070010);  //stretch out and delay strobes for FPGA latency
+  mciPowerOff();
+  PC104FPGA = 0; //necessary in case of reboot from linux
+  udelay(10);    //wait for board ID to stabilize on GPIOs
+
+       /* add other devices depending on carrier board type */
+  switch (getBoardId()) {
+    case 0:  /* ESP 3G baseboard */
+      assertPeripheralReset();
+      udelay(10*1000);
+      releasePeripheralReset();
+      printf("MBARI LPC31xx ESP 3G\n");
+      break;
 
-      default:
-        printf("Embedded Artists LPC31xx (board=0x%02x)\n", boardID);
-    }
+    case 0104:  /* (octal 0104) PC/104 carrier */
+
+      PC104FPGA = PC104ENETRESET;
+      udelay(10*1000);
+      PC104FPGA = 0;
+      printf("MBARI PC/104 Carrier\n");
+      break;
+
+    default:
+      restoreTiming(&bootTiming);
+      printf("Embedded Artists LPC31xx (board=0x%02x)\n", boardID);
+  }
 
 #ifdef CONFIG_EA3152
 	gd->bd->bi_arch_number = MACH_TYPE_EA3152;
diff --exclude CVS --exclude .git -uNr u-boot-2009.11/include/configs/ea31xx.h u-boot-2009.11.modified/include/configs/ea31xx.h
--- u-boot-2009.11/include/configs/ea31xx.h	2015-03-25 14:46:13.743874595 -0700
+++ u-boot-2009.11.modified/include/configs/ea31xx.h	2015-02-03 15:54:00.377423477 -0800
@@ -122,7 +122,7 @@
 "rd_addr=32000000\0" \
 "envOffset=40000\0" \
 "envSize=10000\0" \
-"serverip=134.89.10.31\0" \
+"serverip=134.89.10.221\0" \
 "rootPath=/nfsroot/ea313x\0" \
 "ubootFile=u-boot.bin\0" \
 "kernel=uImage\0" \
