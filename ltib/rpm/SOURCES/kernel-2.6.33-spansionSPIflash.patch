diff --exclude CVS --exclude .git -uNr linux-2.6.33/drivers/mtd/devices/m25p80.c linux-2.6.33.modified/drivers/mtd/devices/m25p80.c
--- linux-2.6.33/drivers/mtd/devices/m25p80.c	2010-02-24 10:52:17.000000000 -0800
+++ linux-2.6.33.modified/drivers/mtd/devices/m25p80.c	2012-06-18 10:13:36.709223273 -0700
@@ -80,6 +80,7 @@
 	u16			addr_width;
 	u8			erase_opcode;
 	u8			*command;
+	char		name[24];
 };
 
 static inline struct m25p *mtd_to_m25p(struct mtd_info *mtd)
@@ -679,6 +680,18 @@
 	{ "m25p64",  INFO(0x202017,  0,  64 * 1024, 128, 0) },
 	{ "m25p128", INFO(0x202018,  0, 256 * 1024,  64, 0) },
 
+#if !defined(CONFIG_SPI_LPC313X)
+	{ "m25p05-nonjedec",  INFO(0, 0,  32 * 1024,   2, 0) },
+	{ "m25p10-nonjedec",  INFO(0, 0,  32 * 1024,   4, 0) },
+	{ "m25p20-nonjedec",  INFO(0, 0,  64 * 1024,   4, 0) },
+	{ "m25p40-nonjedec",  INFO(0, 0,  64 * 1024,   8, 0) },
+	{ "m25p80-nonjedec",  INFO(0, 0,  64 * 1024,  16, 0) },
+	{ "m25p16-nonjedec",  INFO(0, 0,  64 * 1024,  32, 0) },
+	{ "m25p32-nonjedec",  INFO(0, 0,  64 * 1024,  64, 0) },
+	{ "m25p64-nonjedec",  INFO(0, 0,  64 * 1024, 128, 0) },
+	{ "m25p128-nonjedec", INFO(0, 0, 256 * 1024,  64, 0) },
+#endif
+
 	{ "m45pe10", INFO(0x204011,  0, 64 * 1024,    2, 0) },
 	{ "m45pe80", INFO(0x204014,  0, 64 * 1024,   16, 0) },
 	{ "m45pe16", INFO(0x204015,  0, 64 * 1024,   32, 0) },
@@ -695,12 +708,14 @@
 	{ "w25x32", INFO(0xef3016, 0, 64 * 1024,  64, SECT_4K) },
 	{ "w25x64", INFO(0xef3017, 0, 64 * 1024, 128, SECT_4K) },
 
+#if !defined(CONFIG_SPI_LPC313X)
 	/* Catalyst / On Semiconductor -- non-JEDEC */
 	{ "cat25c11", CAT25_INFO(  16, 8, 16, 1) },
 	{ "cat25c03", CAT25_INFO(  32, 8, 16, 2) },
 	{ "cat25c09", CAT25_INFO( 128, 8, 32, 2) },
 	{ "cat25c17", CAT25_INFO( 256, 8, 32, 2) },
 	{ "cat25128", CAT25_INFO(2048, 8, 64, 2) },
+#endif
 	{ },
 };
 MODULE_DEVICE_TABLE(spi, m25p_ids);
@@ -794,8 +809,12 @@
 
 		jid = jedec_probe(spi);
 		if (!jid) {
+#if defined(CONFIG_SPI_LPC313X)
+			return  -ENODEV;
+#else
 			dev_info(&spi->dev, "non-JEDEC variant of %s\n",
 				 id->name);
+#endif
 		} else if (jid != id) {
 			/*
 			 * JEDEC knows better, so overwrite platform ID. We
@@ -804,8 +823,9 @@
 			 * marked read-only, and we don't want to lose that
 			 * information, even if it's not 100% accurate.
 			 */
-			dev_warn(&spi->dev, "found %s, expected %s\n",
-				 jid->name, id->name);
+#if defined(CONFIG_SPI_LPC313X)
+			dev_warn(&spi->dev, "%s found %s flash\n", id->name, jid->name);
+#endif
 			id = jid;
 			info = (void *)jid->driver_data;
 		}
@@ -822,6 +842,9 @@
 
 	flash->spi = spi;
 	mutex_init(&flash->lock);
+	sprintf(flash->name, "spi%d.%d-%s",
+		spi->master->bus_num, spi->chip_select,
+		id->name);
 	dev_set_drvdata(&spi->dev, flash);
 
 	/*
@@ -835,11 +858,7 @@
 		write_sr(flash, 0);
 	}
 
-	if (data && data->name)
-		flash->mtd.name = data->name;
-	else
-		flash->mtd.name = dev_name(&spi->dev);
-
+	flash->mtd.name = (data && data->name) ? data->name : flash->name;
 	flash->mtd.type = MTD_NORFLASH;
 	flash->mtd.writesize = 1;
 	flash->mtd.flags = MTD_CAP_NORFLASH;
diff --exclude CVS --exclude .git -uNr linux-2.6.33/drivers/mtd/devices/mtd_dataflash.c linux-2.6.33.modified/drivers/mtd/devices/mtd_dataflash.c
--- linux-2.6.33/drivers/mtd/devices/mtd_dataflash.c	2010-02-24 10:52:17.000000000 -0800
+++ linux-2.6.33.modified/drivers/mtd/devices/mtd_dataflash.c	2012-06-14 23:54:58.465674420 -0700
@@ -878,6 +878,7 @@
 				info->pagesize, info->pageoffset,
 				(info->flags & SUP_POW2PS) ? 'd' : 'c');
 
+#if !defined(CONFIG_SPI_LPC313X)
 	/*
 	 * Older chips support only legacy commands, identifing
 	 * capacity using bits in the status byte.
@@ -930,6 +931,9 @@
 				dev_name(&spi->dev), status);
 
 	return status;
+#else
+	return -ENODEV;
+#endif
 }
 
 static int __devexit dataflash_remove(struct spi_device *spi)
diff --exclude CVS --exclude .git -uNr linux-2.6.33/arch/arm/mach-lpc313x/ea313x.c linux-2.6.33.modified/arch/arm/mach-lpc313x/ea313x.c
--- linux-2.6.33/arch/arm/mach-lpc313x/ea313x.c	2012-06-18 19:20:10.547100470 -0700
+++ linux-2.6.33.modified/arch/arm/mach-lpc313x/ea313x.c	2012-06-18 19:27:32.533827866 -0700
@@ -286,10 +286,20 @@
 	16M:  Blocks 38  - 165  - Ramdisk image (if used)
 	???:  Blocks 166 - end  - Root filesystem/storage */
 	{
-		.name	= "lpc313x-rootfs",
+		.name	= "lpc313x-std.rootfs",
 		.offset	= (BLK_SIZE * 166),
 		.size	= MTDPART_SIZ_FULL
 	},
+	{
+		.name	= "lpc313x-big.rootfs.",
+		.offset	= (BLK_SIZE * 38),
+		.size	= MTDPART_SIZ_FULL
+	},
+	{
+		.name	= "lpc313x-all.rootfs",
+		.offset	= (BLK_SIZE * 6),
+		.size	= MTDPART_SIZ_FULL
+	},
 };
 
 static struct lpc313x_nand_timing ea313x_nanddev_timing = {
@@ -362,12 +372,17 @@
 struct lpc313x_spics_cfg lpc313x_stdspics_cfg[] =
 {
 	/* SPI CS0 */
-	[0] =
 	{
 		.spi_spo	= 0, /* Low clock between transfers */
 		.spi_sph	= 0, /* Data capture on first clock edge (high edge with spi_spo=0) */
 		.spi_cs_set	= spi_set_cs_state,
 	},
+    /* use SPI CS1 only for probing two alternative NOR flash chips */
+	{ 
+		.spi_spo	= 0, /* Low clock between transfers */
+		.spi_sph	= 0, /* Data capture on first clock edge (high edge with spi_spo=0) */
+		.spi_cs_set	= spi_set_cs_state,
+	},
 };
 
 struct lpc313x_spi_cfg lpc313x_spidata =
@@ -407,23 +422,32 @@
 arch_initcall(lpc313x_spidev_register);
 #endif
 
-#if defined(CONFIG_MTD_DATAFLASH)
+/*  either one Amtel DataFlash *or* Spansion SPI NOR flash may be loaded */
 /* MTD Data FLASH driver registration */
 static int __init lpc313x_spimtd_register(void)
 {
-	struct spi_board_info info =
-	{
+	struct spi_board_info info[] = {
+#if defined(CONFIG_MTD_DATAFLASH)
+	  {
 		.modalias = "mtd_dataflash",
 		.max_speed_hz = 30000000,
 		.bus_num = 0,
 		.chip_select = 0,
+	  },
+#endif
+#if defined(CONFIG_MTD_M25P80)
+	  {
+		.modalias = "m25p80",
+		.max_speed_hz = 30000000,
+		.bus_num = 0,
+		.chip_select = 1,
+	  }
+#endif
 	};
-
-	return spi_register_board_info(&info, 1);
+	return spi_register_board_info(info, ARRAY_SIZE(info));
 }
 arch_initcall(lpc313x_spimtd_register);
 #endif
-#endif
 
 static struct platform_device *devices[] __initdata = {
 	&lpc313x_mci_device,
